[backend]
precision = double
rank-allocator = linear

[backend-openmp]
gimmik-max-nnz = 65536
[constants]
gamma = 1.4
mu = 0.00
Pr = 0.72
cp = 3.5

S = 13.5    ; Strength
M = 0.4     ; Mach number
R = 1.5     ; Radius

[solver]
system = navier-stokes
order = 3

[solver-time-integrator]
scheme = rk34
controller = none
tstart = 0.0
tend = 20.000
dt = 0.002

[solver-interfaces]
riemann-solver = rusanov
ldg-beta = 0.5
ldg-tau = 0.1

[solver-interfaces-quad]
flux-pts = gauss-legendre

[solver-elements-hex]
soln-pts = gauss-legendre

[soln-plugin-nancheck]
nsteps = 10

[soln-plugin-writer]
dt-out =0.5
basedir = .
basename = euler-mul-{n:03d}

[soln-bcs-farfield]
#[soln-bcs-char]
type = char-riem-inv
rho = 1.0
u = 1.0
v = 0.0
w = 0.0
p = 71.4285714286

[soln-bcs-overset]
type = overset

[moving-object]
type = rigid
grid-0 = static
grid-1 = dynamic

[overset]
type = 1

[motion-translate-g0]
ison = yes
x = 0.0*t
y = 0.0*t
z = 0.0*t

[motion-rotate-g0]
ison = yes
pivot = (0.0,0.0,0.0)
axis = (0.0,1.0,0.0)
rott = 0.0*t 

# motion for 
#y = 0.05*sym.sin(0.192*2.0*np.pi*t)
[motion-translate-g1]
ison = yes
x = 0.0*t
y = 0.00*t
z = 0.0*t

[motion-rotate-g1]
ison = yes
pivot = (0.0,0.0,0.0)
axis = (0.0,0.0,1.0)
rott = 0.5*np.pi*t


[soln-ics]
; Factored common subexpression
f = ((1 - x*x - y*y )/(2*R*R))

rho = pow(1 - S*S*M*M*(gamma - 1)*exp(2*%(f)s)/(8*pi*pi), 1/(gamma - 1))
u = S*y*exp(%(f)s)/(2*pi*R)
v = 1 - S*x*exp(%(f)s)/(2*pi*R)
w = 0
p = 1/(gamma*M*M)*pow(1 - S*S*M*M*(gamma - 1)*exp(2*%(f)s)/(8*pi*pi), gamma/(gamma - 1))
