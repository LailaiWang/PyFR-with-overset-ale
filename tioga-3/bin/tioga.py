# This file was automatically generated by SWIG (http://www.swig.org).
# Version 4.0.1
#
# Do not make changes to this file unless you know what you are doing--modify
# the SWIG interface file instead.

from sys import version_info as _swig_python_version_info
if _swig_python_version_info < (2, 7, 0):
    raise RuntimeError("Python 2.7 or later required")

# Import the low-level C/C++ module
if __package__ or "." in __name__:
    from . import _tioga
else:
    import _tioga

try:
    import builtins as __builtin__
except ImportError:
    import __builtin__

def _swig_repr(self):
    try:
        strthis = "proxy of " + self.this.__repr__()
    except __builtin__.Exception:
        strthis = ""
    return "<%s.%s; %s >" % (self.__class__.__module__, self.__class__.__name__, strthis,)


def _swig_setattr_nondynamic_instance_variable(set):
    def set_instance_attr(self, name, value):
        if name == "thisown":
            self.this.own(value)
        elif name == "this":
            set(self, name, value)
        elif hasattr(self, name) and isinstance(getattr(type(self), name), property):
            set(self, name, value)
        else:
            raise AttributeError("You cannot add instance attributes to %s" % self)
    return set_instance_attr


def _swig_setattr_nondynamic_class_variable(set):
    def set_class_attr(cls, name, value):
        if hasattr(cls, name) and not isinstance(getattr(cls, name), property):
            set(cls, name, value)
        else:
            raise AttributeError("You cannot add class attributes to %s" % cls)
    return set_class_attr


def _swig_add_metaclass(metaclass):
    """Class decorator for adding a metaclass to a SWIG wrapped class - a slimmed down version of six.add_metaclass"""
    def wrapper(cls):
        return metaclass(cls.__name__, cls.__bases__, cls.__dict__.copy())
    return wrapper


class _SwigNonDynamicMeta(type):
    """Meta class to enforce nondynamic attributes (no new attributes) for a class"""
    __setattr__ = _swig_setattr_nondynamic_class_variable(type.__setattr__)


import weakref

tioga_dataupdate_ab_cb_ptr = _tioga.tioga_dataupdate_ab_cb_ptr
tioga_dataupdate_ab = _tioga.tioga_dataupdate_ab
tioga_dataupdate_ab_send_cb_ptr = _tioga.tioga_dataupdate_ab_send_cb_ptr
tioga_dataupdate_ab_send = _tioga.tioga_dataupdate_ab_send
tioga_dataupdate_ab_recv_cb_ptr = _tioga.tioga_dataupdate_ab_recv_cb_ptr
tioga_dataupdate_ab_recv = _tioga.tioga_dataupdate_ab_recv
tioga_preprocess_grids__cb_ptr = _tioga.tioga_preprocess_grids__cb_ptr
tioga_preprocess_grids_ = _tioga.tioga_preprocess_grids_
tioga_performconnectivity__cb_ptr = _tioga.tioga_performconnectivity__cb_ptr
tioga_performconnectivity_ = _tioga.tioga_performconnectivity_
tioga_do_point_connectivity_cb_ptr = _tioga.tioga_do_point_connectivity_cb_ptr
tioga_do_point_connectivity = _tioga.tioga_do_point_connectivity
tioga_set_transform_cb_ptr = _tioga.tioga_set_transform_cb_ptr
tioga_set_transform = _tioga.tioga_set_transform
tioga_unblank_part_1_cb_ptr = _tioga.tioga_unblank_part_1_cb_ptr
tioga_unblank_part_1 = _tioga.tioga_unblank_part_1
tioga_unblank_part_2_cb_ptr = _tioga.tioga_unblank_part_2_cb_ptr
tioga_unblank_part_2 = _tioga.tioga_unblank_part_2
tioga_set_soasz_cb_ptr = _tioga.tioga_set_soasz_cb_ptr
tioga_set_soasz = _tioga.tioga_set_soasz
tioga_pass_data_cb_ptr = _tioga.tioga_pass_data_cb_ptr
tioga_pass_data = _tioga.tioga_pass_data
tg_print_data_cb_ptr = _tioga.tg_print_data_cb_ptr
tg_print_data = _tioga.tg_print_data
get_nodal_basis_wrapper_cb_ptr = _tioga.get_nodal_basis_wrapper_cb_ptr
get_nodal_basis_wrapper = _tioga.get_nodal_basis_wrapper
pack_cell_coords_wrapper_cb_ptr = _tioga.pack_cell_coords_wrapper_cb_ptr
pack_cell_coords_wrapper = _tioga.pack_cell_coords_wrapper
unpack_unblank_u_wrapper_cb_ptr = _tioga.unpack_unblank_u_wrapper_cb_ptr
unpack_unblank_u_wrapper = _tioga.unpack_unblank_u_wrapper
pack_fringe_coords_wrapper_cb_ptr = _tioga.pack_fringe_coords_wrapper_cb_ptr
pack_fringe_coords_wrapper = _tioga.pack_fringe_coords_wrapper
unpack_fringe_u_wrapper_cb_ptr = _tioga.unpack_fringe_u_wrapper_cb_ptr
unpack_fringe_u_wrapper = _tioga.unpack_fringe_u_wrapper
unpack_fringe_grad_wrapper_cb_ptr = _tioga.unpack_fringe_grad_wrapper_cb_ptr
unpack_fringe_grad_wrapper = _tioga.unpack_fringe_grad_wrapper
move_grid_nested_wrapper_cb_ptr = _tioga.move_grid_nested_wrapper_cb_ptr
move_grid_nested_wrapper = _tioga.move_grid_nested_wrapper
move_grid_flat_wrapper_cb_ptr = _tioga.move_grid_flat_wrapper_cb_ptr
move_grid_flat_wrapper = _tioga.move_grid_flat_wrapper
initialize_stream_event_cb_ptr = _tioga.initialize_stream_event_cb_ptr
initialize_stream_event = _tioga.initialize_stream_event
destroy_stream_event_cb_ptr = _tioga.destroy_stream_event_cb_ptr
destroy_stream_event = _tioga.destroy_stream_event
get_stream_handle_cb_ptr = _tioga.get_stream_handle_cb_ptr
get_stream_handle = _tioga.get_stream_handle
get_event_handle_cb_ptr = _tioga.get_event_handle_cb_ptr
get_event_handle = _tioga.get_event_handle
sync_device_cb_ptr = _tioga.sync_device_cb_ptr
sync_device = _tioga.sync_device
class callbackFuncs(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr
    setTransform = property(_tioga.callbackFuncs_setTransform_get, _tioga.callbackFuncs_setTransform_set)

    def __init__(self):
        _tioga.callbackFuncs_swiginit(self, _tioga.new_callbackFuncs())
    __swig_destroy__ = _tioga.delete_callbackFuncs

# Register callbackFuncs in _tioga:
_tioga.callbackFuncs_swigregister(callbackFuncs)


def tioga_init_f90_(scomm):
    return _tioga.tioga_init_f90_(scomm)

def tioga_init_(tcomm):
    return _tioga.tioga_init_(tcomm)

def tioga_registergrid_data_(btag, nnodes, xyz, ibl, nwbc, nobc, wbcnode, obcnode, ntypes, _nv, _ncf, _nc, _vconn):
    return _tioga.tioga_registergrid_data_(btag, nnodes, xyz, ibl, nwbc, nobc, wbcnode, obcnode, ntypes, _nv, _ncf, _nc, _vconn)

def tioga_register_face_data_(gtype, f2c, c2f, fibl, nOverFaces, nWallFaces, nMpiFaces, overFaces, wallFaces, mpiFaces, mpiProcR, mpiFidR, nftype, _nfv, _nf, _fconn):
    return _tioga.tioga_register_face_data_(gtype, f2c, c2f, fibl, nOverFaces, nWallFaces, nMpiFaces, overFaces, wallFaces, mpiFaces, mpiProcR, mpiFidR, nftype, _nfv, _nf, _fconn)

def tioga_register_amr_global_data_(nf, qstride, qnodein, idata, rdata, ngridsin, qnodesize):
    return _tioga.tioga_register_amr_global_data_(nf, qstride, qnodein, idata, rdata, ngridsin, qnodesize)

def tioga_register_amr_patch_count_(npatches):
    return _tioga.tioga_register_amr_patch_count_(npatches)

def tioga_register_amr_local_data_(ipatch, global_id, iblank, q):
    return _tioga.tioga_register_amr_local_data_(ipatch, global_id, iblank, q)

def tioga_get_igbp_list():
    return _tioga.tioga_get_igbp_list()

def tioga_get_n_igbps():
    return _tioga.tioga_get_n_igbps()

def tioga_performconnectivity_highorder_():
    return _tioga.tioga_performconnectivity_highorder_()

def tioga_performconnectivity_amr_():
    return _tioga.tioga_performconnectivity_amr_()

def tioga_dataupdate_(q, nvar, itype):
    return _tioga.tioga_dataupdate_(q, nvar, itype)

def tioga_dataupdate_amr(q, nvar, interptype):
    return _tioga.tioga_dataupdate_amr(q, nvar, interptype)

def tioga_writeoutputfiles_(q, nvar, itype):
    return _tioga.tioga_writeoutputfiles_(q, nvar, itype)

def tioga_getdonorcount_(dcount, fcount):
    return _tioga.tioga_getdonorcount_(dcount, fcount)

def tioga_getdonorinfo_(receptors, indices, frac, dcount):
    return _tioga.tioga_getdonorinfo_(receptors, indices, frac, dcount)

def tioga_setsymmetry_(isym):
    return _tioga.tioga_setsymmetry_(isym)

def tioga_setresolutions_(nres, cres):
    return _tioga.tioga_setresolutions_(nres, cres)

def tioga_setcelliblank_(iblank_cell):
    return _tioga.tioga_setcelliblank_(iblank_cell)

def tioga_set_highorder_callback_(f1, f2, f3, f4, f5):
    return _tioga.tioga_set_highorder_callback_(f1, f2, f3, f4, f5)

def tioga_set_ab_callback_(gnf, gfn, gqs, gqf, ggs, ggf, gqss, gdqs):
    return _tioga.tioga_set_ab_callback_(gnf, gfn, gqs, gqf, ggs, ggf, gqss, gdqs)

def tioga_set_ab_callback_gpu_(h2df, h2dc, gqd, gdqd, gfng, gcng, gnw, dfg):
    return _tioga.tioga_set_ab_callback_gpu_(h2df, h2dc, gqd, gdqd, gfng, gcng, gnw, dfg)

def tioga_register_moving_grid_data(grid_vel, offset, Rmat, Pivot):
    return _tioga.tioga_register_moving_grid_data(grid_vel, offset, Rmat, Pivot)

def tioga_unblank_all_grids(nvar):
    return _tioga.tioga_unblank_all_grids(nvar)

def tioga_set_amr_callback_(f1):
    return _tioga.tioga_set_amr_callback_(f1)

def tioga_delete_():
    return _tioga.tioga_delete_()

def tioga_set_stream_handle(stream, event):
    return _tioga.tioga_set_stream_handle(stream, event)

def tioga_set_device_geo_data(xyz, coord, ibc, ibf):
    return _tioga.tioga_set_device_geo_data(xyz, coord, ibc, ibf)

def tioga_get_callbacks():
    return _tioga.tioga_get_callbacks()
MAX_GRID_DIM = _tioga.MAX_GRID_DIM
N_EVENTS = _tioga.N_EVENTS
N_STREAMS = _tioga.N_STREAMS

def pmg_helper(pmgfunc):
    return _tioga.pmg_helper(pmgfunc)
class callbacks(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def get_nodes_per_cell(self, cellid, nnodes):
        return _tioga.callbacks_get_nodes_per_cell(self, cellid, nnodes)

    def get_nodes_per_face(self, faceid, nnodes):
        return _tioga.callbacks_get_nodes_per_face(self, faceid, nnodes)

    def get_receptor_nodes(self, cellid, nnodes, xyz):
        return _tioga.callbacks_get_receptor_nodes(self, cellid, nnodes, xyz)

    def get_face_nodes(self, faceid, nnodes, xyz):
        return _tioga.callbacks_get_face_nodes(self, faceid, nnodes, xyz)

    def donor_inclusion_test(self, cellid, xyz, passFlag, rst):
        return _tioga.callbacks_donor_inclusion_test(self, cellid, xyz, passFlag, rst)

    def convert_to_modal(self, cellid, nspts, qin, npts, idx_o, qot):
        return _tioga.callbacks_convert_to_modal(self, cellid, nspts, qin, npts, idx_o, qot)

    def donor_frac(self, cellid, xyz, nwts, inode, wts, rst, buffsize):
        return _tioga.callbacks_donor_frac(self, cellid, xyz, nwts, inode, wts, rst, buffsize)

    def get_q_spt(self, cellid, spt, va):
        return _tioga.callbacks_get_q_spt(self, cellid, spt, va)

    def get_dq_spt(self, cellid, spt, dim, va):
        return _tioga.callbacks_get_dq_spt(self, cellid, spt, dim, va)

    def get_q_fpt(self, faceid, fpt, va):
        return _tioga.callbacks_get_q_fpt(self, faceid, fpt, va)

    def get_dq_fpt(self, faceid, fpt, dim, va):
        return _tioga.callbacks_get_dq_fpt(self, faceid, fpt, dim, va)

    def get_q_spts(self, es, ss, vs, etyp):
        return _tioga.callbacks_get_q_spts(self, es, ss, vs, etyp)

    def get_dq_spts(self, es, ss, vs, ds, etyp):
        return _tioga.callbacks_get_dq_spts(self, es, ss, vs, ds, etyp)

    def donor_frac_gpu(self, cellid, arg0, arg1, arg2):
        return _tioga.callbacks_donor_frac_gpu(self, cellid, arg0, arg1, arg2)

    def get_nweights_gpu(self, arg0):
        return _tioga.callbacks_get_nweights_gpu(self, arg0)

    def get_face_nodes_gpu(self, ids, nf, nptf, xyz, fdata):
        return _tioga.callbacks_get_face_nodes_gpu(self, ids, nf, nptf, xyz, fdata)

    def get_cell_nodes_gpu(self, ids, nf, nptf, xyz):
        return _tioga.callbacks_get_cell_nodes_gpu(self, ids, nf, nptf, xyz)

    def fringe_data_to_device(self, ids, nf, grad, data, faceids, mpifringe, nfringeface):
        return _tioga.callbacks_fringe_data_to_device(self, ids, nf, grad, data, faceids, mpifringe, nfringeface)

    def cell_data_to_device(self, ids, nc, grad, data):
        return _tioga.callbacks_cell_data_to_device(self, ids, nc, grad, data)

    def get_q_spts_gpu(self, es, ss, vs, etype):
        return _tioga.callbacks_get_q_spts_gpu(self, es, ss, vs, etype)

    def get_dq_spts_gpu(self, es, ss, vs, ds, etype):
        return _tioga.callbacks_get_dq_spts_gpu(self, es, ss, vs, ds, etype)
    __swig_destroy__ = _tioga.delete_callbacks

    def __init__(self):
        if self.__class__ == callbacks:
            _self = None
        else:
            _self = self
        _tioga.callbacks_swiginit(self, _tioga.new_callbacks(_self, ))
    def __disown__(self):
        self.this.disown()
        _tioga.disown_callbacks(self)
        return weakref.proxy(self)

# Register callbacks in _tioga:
_tioga.callbacks_swigregister(callbacks)
cvar = _tioga.cvar

class gmrespmg(object):
    thisown = property(lambda x: x.this.own(), lambda x, v: x.this.own(v), doc="The membership flag")
    __repr__ = _swig_repr

    def pmgupdate(self):
        return _tioga.gmrespmg_pmgupdate(self)

    def rhsupdate(self):
        return _tioga.gmrespmg_rhsupdate(self)
    __swig_destroy__ = _tioga.delete_gmrespmg

    def __init__(self):
        if self.__class__ == gmrespmg:
            _self = None
        else:
            _self = self
        _tioga.gmrespmg_swiginit(self, _tioga.new_gmrespmg(_self, ))
    def __disown__(self):
        self.this.disown()
        _tioga.disown_gmrespmg(self)
        return weakref.proxy(self)

# Register gmrespmg in _tioga:
_tioga.gmrespmg_swigregister(gmrespmg)


def tioga_set_callbacks_ptr(cb):
    return _tioga.tioga_set_callbacks_ptr(cb)

def tioga_set_highorder_callback_wrapper(cb):
    return _tioga.tioga_set_highorder_callback_wrapper(cb)

def tioga_set_ab_callback_wrapper(cb):
    return _tioga.tioga_set_ab_callback_wrapper(cb)

def tioga_set_ab_callback_gpu_wrapper(cb):
    return _tioga.tioga_set_ab_callback_gpu_wrapper(cb)

def tioga_set_gmres_pmg_ptr():
    return _tioga.tioga_set_gmres_pmg_ptr()

def tg_allocate_device(maxcells, maxupts, dim, nvar, vect, itemsize):
    return _tioga.tg_allocate_device(maxcells, maxupts, dim, nvar, vect, itemsize)

def tg_allocate_host(maxcells, maxupts, dim, nvar, vect, itemsize):
    return _tioga.tg_allocate_host(maxcells, maxupts, dim, nvar, vect, itemsize)

def tg_allocate_device_int(maxfaces):
    return _tioga.tg_allocate_device_int(maxfaces)

def tg_free_device(d, itemsize):
    return _tioga.tg_free_device(d, itemsize)

def tg_copy_to_device_h(a, b, data, nbytes):
    return _tioga.tg_copy_to_device_h(a, b, data, nbytes)

def tg_copy_to_device(*args):
    return _tioga.tg_copy_to_device(*args)

def tg_copy_to_host(*args):
    return _tioga.tg_copy_to_host(*args)

# Python functions here



